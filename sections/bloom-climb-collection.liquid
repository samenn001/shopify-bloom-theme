{{ content_for_header }}
<!doctype html>
<html class="no-js" lang="{{ request.locale.iso_code }}">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <meta name="theme-color" content="">
    <link rel="canonical" href="{{ canonical_url }}">

    <title>
      {{ collection.title | escape }} - {{ shop.name }}
    </title>

    {{ 'bloom-climb-collection.css' | asset_url | stylesheet_tag }}
    {{ 'component-facets.css' | asset_url | stylesheet_tag }}
    
    <!-- Google Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Playfair+Display:wght@400;600;700&family=Inter:wght@400;500;600&family=Caveat:wght@400;700&display=swap" rel="stylesheet">

    <!-- Hide default Shopify header -->
    <style>
      /* Hide default Dawn theme header and footer */
      #shopify-section-header,
      #shopify-section-footer,
      .shopify-section-header,
      .shopify-section-footer,
      .header-wrapper,
      .footer,
      sticky-header,
      .section-header,
      .announcement-bar-section,
      header.header {
        display: none !important;
      }
      
      /* Ensure our header is at the top */
      body {
        padding-top: 0 !important;
        margin-top: 0 !important;
      }
      
      .bc-announcement-bar {
        position: fixed;
        top: 0 !important;
      }
      
      .bc-header {
        top: 36px !important;
      }
    </style>

    {{ content_for_header }}
  </head>

  <body class="bloom-climb-collection">
    <!-- Announcement Bar -->
    <div class="bc-announcement-bar">
      <div class="bc-announcement-track">
        <span>üå∏ FREE SHIPPING on Orders $75+</span>
        <span>‚Ä¢</span>
        <span>30-Day Happy Cat Guarantee</span>
        <span>‚Ä¢</span>
        <span>üêæ Vet Approved Design</span>
        <span>‚Ä¢</span>
        <span>üåø Eco-Friendly Materials</span>
        <span>‚Ä¢</span>
        <span>üå∏ FREE SHIPPING on Orders $75+</span>
        <span>‚Ä¢</span>
        <span>30-Day Happy Cat Guarantee</span>
        <span>‚Ä¢</span>
        <span>üêæ Vet Approved Design</span>
        <span>‚Ä¢</span>
        <span>üåø Eco-Friendly Materials</span>
      </div>
    </div>

    <!-- Header -->
    <header class="bc-header">
      <div class="bc-header-content">
        <button class="bc-mobile-menu-btn" onclick="toggleMobileMenu()">
          <span></span>
          <span></span>
          <span></span>
        </button>
        
        <a href="/" class="bc-logo">BLOOM & CLIMB</a>
        
        <nav class="bc-nav" id="mobile-nav">
          <button class="bc-mobile-close" onclick="toggleMobileMenu()">‚úï</button>
          <a href="/collections/all" class="bc-nav-link active">Shop</a>
          <a href="/" class="bc-nav-link">Home</a>
          <a href="/pages/contact" class="bc-nav-link">Contact</a>
        </nav>
        
        <div class="bc-header-actions">
          <button class="bc-search-btn">üîç</button>
          <a href="/account" class="bc-account-btn">üë§</a>
          <a href="/cart" class="bc-cart-btn">
            üõí <span class="bc-cart-count">{{ cart.item_count }}</span>
          </a>
        </div>
      </div>
    </header>

    <!-- Hero Section -->
    <section class="bc-collection-hero">
      <div class="bc-hero-content">
        <h1 class="bc-hero-title">üåø Welcome to Our Garden Collection üåø</h1>
        <p class="bc-hero-subtitle">Handpicked Trees for Happy Cats</p>
        <div class="bc-petal-animation"></div>
      </div>
    </section>

    <!-- Main Content -->
    <main class="bc-main">
      <div class="bc-container">
        <div class="bc-layout">
          {% paginate collection.products by 24 %}
          <!-- Trust Sidebar -->
          <aside class="bc-trust-sidebar">
            <!-- Happy Cats Counter -->
            <div class="bc-trust-section bc-happy-cats">
              <h3 class="bc-trust-title">üå∏ 2,847 Happy Cats</h3>
              <div class="bc-rating">
                <span class="bc-stars">‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê</span>
                <span class="bc-rating-text">(4.9)</span>
              </div>
            </div>

            <!-- Garden Promise -->
            <div class="bc-trust-section bc-promise">
              <h4 class="bc-section-title">Our Garden Promise üå±</h4>
              <ul class="bc-promise-list">
                <li>Free Shipping $75+</li>
                <li>30-Day Happy Cat Guarantee</li>
                <li>Handcrafted with Love</li>
                <li>Eco-Friendly Materials</li>
              </ul>
            </div>

            <!-- Latest Reviews -->
            <div class="bc-trust-section bc-reviews">
              <h4 class="bc-section-title">Latest Blooms üåª</h4>
              <div class="bc-review-list">
                <div class="bc-review">
                  <p class="bc-review-text">"My cats are obsessed!"</p>
                  <p class="bc-review-author">- Sarah, 2 hours ago</p>
                </div>
                <div class="bc-review">
                  <p class="bc-review-text">"Perfect for our apartment"</p>
                  <p class="bc-review-author">- Mike, today</p>
                </div>
                <div class="bc-review">
                  <p class="bc-review-text">"Worth every penny!"</p>
                  <p class="bc-review-author">- Luna's mom, yesterday</p>
                </div>
              </div>
            </div>

            <!-- Help Section -->
            <div class="bc-trust-section bc-help">
              <p class="bc-help-text">Need help choosing?</p>
              <a href="/pages/contact" class="bc-help-link">üåø Chat with us</a>
            </div>
          </aside>

          <!-- Product Grid -->
          <div class="bc-products">
            <div class="bc-products-header">
              <p id="ProductCount" class="bc-product-count">{{ collection.products_count }} Beautiful Trees</p>
            </div>

            <div id="ProductGridContainer">
              <div id="product-grid" data-id="{{ section.id }}">
                <div class="collection">
            <div class="bc-product-grid">
              {% for product in collection.products %}
                {%- comment -%}
                  Extract product attributes for filtering
                  Using tags, variants, and metafields for filter data
                {%- endcomment -%}
                {%- assign product_tags = product.tags | join: ',' | downcase -%}
                {%- assign product_colors = '' -%}
                {%- assign product_sizes = '' -%}
                {%- assign product_features = '' -%}
                
                {%- comment -%} Extract sizes from tags or variant options {%- endcomment -%}
                {%- for tag in product.tags -%}
                  {%- assign tag_lower = tag | downcase -%}
                  {%- if tag_lower contains 'small' or tag_lower contains '3.5ft' or tag_lower contains '3.5' -%}
                    {%- assign product_sizes = product_sizes | append: 'small,' -%}
                  {%- elsif tag_lower contains 'medium' or tag_lower contains '4.5ft' or tag_lower contains '4.5' -%}
                    {%- assign product_sizes = product_sizes | append: 'medium,' -%}
                  {%- elsif tag_lower contains 'large' or tag_lower contains '5.5ft' or tag_lower contains '5.5' -%}
                    {%- assign product_sizes = product_sizes | append: 'large,' -%}
                  {%- elsif tag_lower contains 'xl' or tag_lower contains 'extra large' or tag_lower contains '6.5ft' or tag_lower contains '6.5' -%}
                    {%- assign product_sizes = product_sizes | append: 'xl,' -%}
                  {%- endif -%}
                  
                  {%- comment -%} Extract colors from tags {%- endcomment -%}
                  {%- if tag_lower contains 'pink' or tag_lower contains 'cherry' or tag_lower contains 'blossom' -%}
                    {%- assign product_colors = product_colors | append: 'pink,' -%}
                  {%- elsif tag_lower contains 'green' or tag_lower contains 'sage' or tag_lower contains 'mint' -%}
                    {%- assign product_colors = product_colors | append: 'green,' -%}
                  {%- elsif tag_lower contains 'natural' or tag_lower contains 'beige' or tag_lower contains 'wood' -%}
                    {%- assign product_colors = product_colors | append: 'natural,' -%}
                  {%- elsif tag_lower contains 'white' or tag_lower contains 'cream' -%}
                    {%- assign product_colors = product_colors | append: 'white,' -%}
                  {%- endif -%}
                  
                  {%- comment -%} Extract features from tags {%- endcomment -%}
                  {%- if tag_lower contains 'multi' or tag_lower contains 'multiple' -%}
                    {%- assign product_features = product_features | append: 'multi-cat,' -%}
                  {%- endif -%}
                  {%- if tag_lower contains 'scratch' or tag_lower contains 'sisal' -%}
                    {%- assign product_features = product_features | append: 'scratching-posts,' -%}
                  {%- endif -%}
                  {%- if tag_lower contains 'hammock' or tag_lower contains 'bed' -%}
                    {%- assign product_features = product_features | append: 'hammock,' -%}
                  {%- endif -%}
                  {%- if tag_lower contains 'apartment' or tag_lower contains 'compact' -%}
                    {%- assign product_features = product_features | append: 'apartment-friendly,' -%}
                  {%- endif -%}
                {%- endfor -%}
                
                {%- comment -%} Also check variant options for size {%- endcomment -%}
                {%- for variant in product.variants -%}
                  {%- for option in variant.options -%}
                    {%- assign option_lower = option | downcase -%}
                    {%- unless product_sizes contains 'small' -%}
                      {%- if option_lower contains 'small' -%}
                        {%- assign product_sizes = product_sizes | append: 'small,' -%}
                      {%- endif -%}
                    {%- endunless -%}
                    {%- unless product_sizes contains 'medium' -%}
                      {%- if option_lower contains 'medium' -%}
                        {%- assign product_sizes = product_sizes | append: 'medium,' -%}
                      {%- endif -%}
                    {%- endunless -%}
                    {%- unless product_sizes contains 'large' -%}
                      {%- if option_lower contains 'large' -%}
                        {%- unless option_lower contains 'xl' -%}
                          {%- assign product_sizes = product_sizes | append: 'large,' -%}
                        {%- endunless -%}
                      {%- endif -%}
                    {%- endunless -%}
                    {%- unless product_sizes contains 'xl' -%}
                      {%- if option_lower contains 'xl' or option_lower contains 'extra' -%}
                        {%- assign product_sizes = product_sizes | append: 'xl,' -%}
                      {%- endif -%}
                    {%- endunless -%}
                  {%- endfor -%}
                {%- endfor -%}
                
                {%- comment -%} Default values if none found {%- endcomment -%}
                {%- if product_sizes == '' -%}
                  {%- assign product_sizes = 'medium' -%}
                {%- endif -%}
                {%- if product_colors == '' -%}
                  {%- assign product_colors = 'natural' -%}
                {%- endif -%}
                
                <div class="bc-product-card" 
                     data-product-id="{{ product.id }}"
                     data-product-sizes="{{ product_sizes }}"
                     data-product-colors="{{ product_colors }}"
                     data-product-features="{{ product_features }}"
                     data-product-tags="{{ product_tags }}">
                  <div class="bc-product-image-wrapper">
                    <a href="{{ product.url }}">
                      {% if product.featured_image %}
                        <img src="{{ product.featured_image | image_url: width: 400 }}" 
                             alt="{{ product.title }}"
                             class="bc-product-image"
                             loading="lazy">
                      {% else %}
                        <div class="bc-product-placeholder">üå∏</div>
                      {% endif %}
                      
                      {% if product.metafields.custom.is_new %}
                        <span class="bc-badge bc-badge-new">NEW!</span>
                      {% elsif product.metafields.custom.is_bestseller %}
                        <span class="bc-badge bc-badge-popular">POPULAR</span>
                      {% endif %}
                    </a>
                    
                    <button class="bc-quick-view" data-product-id="{{ product.id }}">
                      Quick View üëÅÔ∏è
                    </button>
                  </div>

                  <div class="bc-product-info">
                    <h3 class="bc-product-title">
                      <a href="{{ product.url }}">{{ product.title }}</a>
                    </h3>
                    
                    <div class="bc-product-rating">
                      ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê <span>({{ product.metafields.reviews.count | default: 0 }})</span>
                    </div>
                    
                    <div class="bc-product-price">
                      {% if product.compare_at_price > product.price %}
                        <span class="bc-price-sale">{{ product.price | money }}</span>
                        <span class="bc-price-original">{{ product.compare_at_price | money }}</span>
                      {% else %}
                        <span class="bc-price">{{ product.price | money }}</span>
                      {% endif %}
                    </div>
                    
                    <form action="/cart/add" method="post" class="bc-add-to-cart-form">
                      <input type="hidden" name="id" value="{{ product.selected_or_first_available_variant.id }}">
                      <button type="submit" class="bc-add-to-cart">
                        Add to Garden üå±
                      </button>
                    </form>
                  </div>
                </div>
              {% else %}
                <div class="bc-empty-state">
                  <span class="bc-empty-icon">üåª</span>
                  <h3>No trees found</h3>
                  <p>Try adjusting your filters to discover more cat trees!</p>
                </div>
              {% endfor %}
                  </div>
                </div>
              </div>
            </div>

            <!-- Pagination -->
            {% if paginate.pages > 1 %}
              <nav class="bc-pagination">
                {% if paginate.previous %}
                  <a href="{{ paginate.previous.url }}" class="bc-page-prev">‚Üê Previous</a>
                {% endif %}
                
                {% for part in paginate.parts %}
                  {% if part.is_link %}
                    <a href="{{ part.url }}" class="bc-page-number {% if part.title == paginate.current_page %}active{% endif %}">
                      {{ part.title }}
                    </a>
                  {% else %}
                    <span class="bc-page-dots">...</span>
                  {% endif %}
                {% endfor %}
                
                {% if paginate.next %}
                  <a href="{{ paginate.next.url }}" class="bc-page-next">Next ‚Üí</a>
                {% endif %}
              </nav>
            {% endif %}
          </div>
          {% endpaginate %}
        </div>
      </div>
    </main>
    <script src="{{ 'facets.js' | asset_url }}" defer="defer"></script>
    <!-- Footer -->
    <footer class="bc-footer">
      <div class="bc-footer-content">
        <div class="bc-footer-section">
          <h4>BLOOM & CLIMB</h4>
          <p>Where Nature Meets Play</p>
        </div>
      </div>
      <div class="bc-footer-bottom">
        <p>¬© 2025 Bloom & Climb | Portland, OR | üêæ Cat Approved</p>
      </div>
    </footer>


    <script>
      // Mobile menu toggle with scroll prevention
      function toggleMobileMenu() {
        const nav = document.getElementById('mobile-nav');
        const body = document.body;
        const isOpen = nav.classList.contains('active');
        
        if (isOpen) {
          nav.classList.remove('active');
          body.style.overflow = '';
          body.style.position = '';
        } else {
          nav.classList.add('active');
          body.style.overflow = 'hidden';
          body.style.position = 'fixed';
        }
      }
      
      // Prevent horizontal scroll on mobile
      document.addEventListener('DOMContentLoaded', function() {
        // Check for horizontal overflow
        function checkHorizontalScroll() {
          const scrollWidth = document.documentElement.scrollWidth;
          const clientWidth = document.documentElement.clientWidth;
          if (scrollWidth > clientWidth) {
            console.warn('Horizontal scroll detected:', scrollWidth - clientWidth, 'px');
          }
        }
        
        // Fix viewport on mobile
        if (window.innerWidth <= 768) {
          document.querySelector('meta[name="viewport"]').setAttribute('content', 
            'width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no');
        }
        
        checkHorizontalScroll();
      });

      // Simple animations for trust sidebar
      const reviewTexts = [
        { text: '"My cats are obsessed!"', author: 'Sarah, 2 hours ago' },
        { text: '"Perfect for our apartment"', author: 'Mike, today' },
        { text: '"Worth every penny!"', author: 'Luna\'s mom, yesterday' },
        { text: '"Best purchase ever!"', author: 'Tom, this morning' },
        { text: '"Cats love the hammock!"', author: 'Emma, 3 hours ago' },
        { text: '"So easy to assemble"', author: 'Alex, yesterday' }
      ];

      // Rotate reviews every 5 seconds
      let currentReviewSet = 0;
      function rotateReviews() {
        const reviewList = document.querySelector('.bc-review-list');
        if (reviewList) {
          currentReviewSet = (currentReviewSet + 3) % reviewTexts.length;
          const reviews = [];
          for (let i = 0; i < 3; i++) {
            const review = reviewTexts[(currentReviewSet + i) % reviewTexts.length];
            reviews.push(`
              <div class="bc-review">
                <p class="bc-review-text">${review.text}</p>
                <p class="bc-review-author">- ${review.author}</p>
              </div>
            `);
          }
          reviewList.style.opacity = '0';
          setTimeout(() => {
            reviewList.innerHTML = reviews.join('');
            reviewList.style.opacity = '1';
          }, 300);
        }
      }

      // Start rotation after 5 seconds
      setTimeout(() => {
        setInterval(rotateReviews, 5000);
      }, 5000);

      // Add transition for review list
      const style = document.createElement('style');
      style.textContent = '.bc-review-list { transition: opacity 0.3s ease; }';
      document.head.appendChild(style);

      // Add to cart with animation
      document.querySelectorAll('.bc-add-to-cart').forEach(button => {
        button.addEventListener('click', function(e) {
          e.preventDefault();
          const form = this.closest('form');
          const originalText = this.innerHTML;
          
          // Disable button and show loading state
          this.disabled = true;
          this.classList.add('adding');
          this.innerHTML = 'Adding... üå∏';
          
          // Create form data and add JSON header
          const formData = new FormData(form);
          
          // Submit form via AJAX with proper headers
          fetch('/cart/add.js', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/x-www-form-urlencoded',
              'Accept': 'application/json'
            },
            body: new URLSearchParams(formData).toString()
          })
          .then(response => {
            if (!response.ok) {
              throw new Error('Failed to add to cart');
            }
            return response.json();
          })
          .then(data => {
            // Success - update button state
            this.classList.remove('adding');
            this.classList.add('added');
            this.innerHTML = 'Added! ‚úì';
            this.disabled = false;
            
            // Update cart count
            const cartCount = document.querySelector('.bc-cart-count');
            if (cartCount) {
              fetch('/cart.js', {
                headers: {
                  'Accept': 'application/json'
                }
              })
              .then(r => r.json())
              .then(cart => {
                cartCount.textContent = cart.item_count;
              })
              .catch(err => console.error('Failed to update cart count:', err));
            }
            
            // Reset button after delay
            setTimeout(() => {
              this.classList.remove('added');
              this.innerHTML = originalText;
            }, 2000);
          })
          .catch(error => {
            // Error - reset button
            console.error('Add to cart error:', error);
            this.classList.remove('adding');
            this.innerHTML = 'Error - Try Again';
            this.disabled = false;
            
            setTimeout(() => {
              this.innerHTML = originalText;
            }, 2000);
          });
        });
      });

      // Products bloom animation on scroll
      const observerOptions = {
        threshold: 0.1,
        rootMargin: '0px 0px -50px 0px'
      };

      const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
          if (entry.isIntersecting) {
            entry.target.classList.add('bloom-in');
          }
        });
      }, observerOptions);

      document.querySelectorAll('.bc-product-card').forEach(card => {
        observer.observe(card);
      });
    </script>
  </body>
</html>